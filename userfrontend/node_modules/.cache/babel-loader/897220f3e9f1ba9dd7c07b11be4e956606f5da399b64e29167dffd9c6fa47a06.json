{"ast":null,"code":"var _jsxFileName = \"/home/alicja/IdeaProjects/SpringApplication/PythonLearn/userfrontend/src/components/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [Student, setStudent] = useState(null);\n  const [Teacher, setTeacher] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch user profile data\n    const fetchProfile = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/authorization/getrole\", {\n          // headers: {\n          //   'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          // },\n        });\n        if (response.ok) {\n          const role = (await response.text()).trim();\n          console.log(role);\n          const url = role === \"Teacher\" ? \"http://localhost:8080/authorization/getteacher\" : \"http://localhost:8080/authorization/getstudent\";\n          const res = await fetch(url);\n          if (res.ok) {\n            const result = await res.json();\n            console.log('Fetched profile:', result[0]);\n            if (role === \"Teacher\") {\n              setTeacher(result[0]);\n              navigate('/teacher-profile');\n            } else {\n              setStudent(result[0]);\n              navigate('/student-profile');\n            }\n          } else {\n            console.error('Error fetching profile data:', res.statusText);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching role:', error);\n      }\n    };\n    fetchProfile();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n_s(Profile, \"zxpgQz46IH0s3ee9ACFt/6/sG4g=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Profile","_s","Student","setStudent","Teacher","setTeacher","navigate","fetchProfile","response","fetch","ok","role","text","trim","console","log","url","res","result","json","error","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/alicja/IdeaProjects/SpringApplication/PythonLearn/userfrontend/src/components/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Profile = () => {\n  const [Student, setStudent] = useState(null);\n  const [Teacher, setTeacher] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Fetch user profile data\n    const fetchProfile = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/authorization/getrole\", {\n          // headers: {\n          //   'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          // },\n        });\n\n        if (response.ok) {\n          const role = (await response.text()).trim();\n          console.log(role);\n          const url = role === \"Teacher\" ? \"http://localhost:8080/authorization/getteacher\" : \"http://localhost:8080/authorization/getstudent\";\n\n          const res = await fetch(url);\n          if (res.ok) {\n            const result = await res.json();\n            console.log('Fetched profile:', result[0]);\n            if (role === \"Teacher\") {\n              setTeacher(result[0]);\n              navigate('/teacher-profile');\n            } else {\n              setStudent(result[0]);\n              navigate('/student-profile');\n            }\n          } else {\n            console.error('Error fetching profile data:', res.statusText);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching role:', error);\n      }\n    };\n\n    fetchProfile();\n  }, [navigate]);\n\n  return <div>Loading...</div>;\n};\n\nexport default Profile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;UAC1E;UACA;UACA;QAAA,CACD,CAAC;QAEF,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,CAAC,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,EAAEC,IAAI,CAAC,CAAC;UAC3CC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;UACjB,MAAMK,GAAG,GAAGL,IAAI,KAAK,SAAS,GAAG,gDAAgD,GAAG,gDAAgD;UAEpI,MAAMM,GAAG,GAAG,MAAMR,KAAK,CAACO,GAAG,CAAC;UAC5B,IAAIC,GAAG,CAACP,EAAE,EAAE;YACV,MAAMQ,MAAM,GAAG,MAAMD,GAAG,CAACE,IAAI,CAAC,CAAC;YAC/BL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAIP,IAAI,KAAK,SAAS,EAAE;cACtBN,UAAU,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC;cACrBZ,QAAQ,CAAC,kBAAkB,CAAC;YAC9B,CAAC,MAAM;cACLH,UAAU,CAACe,MAAM,CAAC,CAAC,CAAC,CAAC;cACrBZ,QAAQ,CAAC,kBAAkB,CAAC;YAC9B;UACF,CAAC,MAAM;YACLQ,OAAO,CAACM,KAAK,CAAC,8BAA8B,EAAEH,GAAG,CAACI,UAAU,CAAC;UAC/D;QACF;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDb,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBAAOP,OAAA;IAAAuB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC9B,CAAC;AAACzB,EAAA,CA5CID,OAAO;EAAA,QAGMH,WAAW;AAAA;AAAA8B,EAAA,GAHxB3B,OAAO;AA8Cb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}